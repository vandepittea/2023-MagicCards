@using Howest.MagicCards.Shared.Filters

<div class="card">
    <div class="card-body">
        <h5>Card Filter</h5>

        <div class="form-group">
            <label for="setName">Set Name:</label>
            <input type="text" class="form-control" id="setName" @bind="@filter.SetName" />
        </div>

        <div class="form-group">
            <label for="artistName">Artist Name:</label>
            <input type="text" class="form-control" id="artistName" @bind="@filter.ArtistName" />
        </div>

        <div class="form-group">
            <label for="rarityName">Rarity Name:</label>
            <input type="text" class="form-control" id="rarityName" @bind="@filter.RarityName" />
        </div>

        <div class="form-group">
            <label for="typeName">Type Name:</label>
            <input type="text" class="form-control" id="typeName" @bind="@filter.TypeName" />
        </div>

        <div class="form-group">
            <label for="cardName">Card Name:</label>
            <input type="text" class="form-control" id="cardName" @bind="@filter.CardName" />
        </div>

        <div class="form-group">
            <label for="cardText">Card Text:</label>
            <input type="text" class="form-control" id="cardText" @bind="@filter.CardText" />
        </div>

        <div class="form-group">
            <label for="sortBy">Sort By:</label>
            <select class="form-control" id="sortBy">
                <option value="">Ascending</option>
                <option value="desc">Descending</option>
            </select>
        </div>

        <button class="btn btn-primary" @onclick="Filter">Apply Filter</button>
    </div>
</div>

@code {
    private CardWebFilterV1_1 filter{ get; set; } = new CardWebFilterV1_1();

    [Parameter]
    public EventCallback<CardWebFilterV1_1> OnFilterChanged { get; set; }

    [Inject]
    private HttpClient HttpClient { get; set; }

    private async Task Filter()
    {
        await OnFilterChanged.InvokeAsync(filter);
    }
}