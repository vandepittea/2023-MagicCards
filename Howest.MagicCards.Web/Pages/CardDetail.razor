@page "/card/{id:int}"

@inject IHttpClientFactory httpClientFactory

@using Howest.MagicCards.Shared.DTO
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json;

<h3>Card Detail</h3>

@if (card == null)
{
    <p>Loading...</p>
}
else if (error != null)
{
    <p>An error occurred: @error</p>
}
else
{
    <div class="card">
        <div class="card-body">
            <h5>@card.Name</h5>
            <p><strong>Type:</strong> @card.Type</p>
            <p><strong>Set:</strong> @card.SetName</p>
            <p><strong>Rarity:</strong> @card.RarityName</p>
            <p><strong>Power:</strong> @card.Power</p>
            <p><strong>Toughness:</strong> @card.Toughness</p>
            <p><strong>Converted Mana Cost:</strong> @card.ConvertedManaCost</p>
            <p><strong>Colors:</strong> @string.Join(", ", card.CardColors)</p>
            <p><strong>Artist:</strong> @card.ArtistName</p>
            <img src="@card.Image" alt="@card.Name" />
            <p>@card.Text</p>
        </div>
    </div>
}

@code {
    private CardDetailDto card;
    private string error;
    private readonly JsonSerializerOptions _jsonOptions;
    private HttpClient _httpCardClient;

    [Parameter]
    public int Id { get; set; }

    public CardDetail()
    {
        _jsonOptions = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
    }

    protected override async Task OnInitializedAsync()
    {
        _httpCardClient = httpClientFactory.CreateClient("CardAPI");
        await LoadCard();
    }

    private async Task LoadCard()
    {
        HttpResponseMessage response = await _httpCardClient.GetAsync($"Cards/{Id}");
        string apiResponse = await response.Content.ReadAsStringAsync();

        if (response.IsSuccessStatusCode)
        {
            CardDetailDto result = JsonSerializer.Deserialize<CardDetailDto>(apiResponse, _jsonOptions);

            card = result;
        }
        else
        {
            error = $"Error: {response.ReasonPhrase}";
            Console.WriteLine(error);
        }
    }
}